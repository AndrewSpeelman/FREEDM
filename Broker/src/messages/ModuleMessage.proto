////////////////////////////////////////////////////////////////////////////////
/// @file         ModuleMessage.proto
///
/// @author       Michael Catanzaro <michael.catanzaro@mst.edu>
///
/// @description  A ModuleMessages encapsulates a message from some DGI module.
///
/// These source code files were created at Missouri University of Science and
/// Technology, and are intended for use in teaching or research. They may be
/// freely copied, modified, and redistributed as long as modified versions are
/// clearly marked as such and this notice is not removed. Neither the authors
/// nor Missouri S&T make any warranty, express or implied, nor assume any legal
/// responsibility for the accuracy, completeness, or usefulness of these files
/// or any information distributed with these files.
///
/// Suggested modifications or questions about these files can be directed to
/// Dr. Bruce McMillin, Department of Computer Science, Missouri University of
/// Science and Technology, Rolla, MO 65409 <ff@mst.edu>.
////////////////////////////////////////////////////////////////////////////////

import "ClockSynchronizer.proto";
import "GroupManagement.proto";
import "LoadBalancing.proto";
import "StateCollection.proto";

package freedm.broker;

message ModuleMessage
{
    enum Type
    {
        // Note that these must match the submessage tags below,
        // or else PrepareForSending() will be very broken.
        GROUP_MANAGEMENT_MESSAGE = 2;
        STATE_COLLECTION_MESSAGE = 3;
        LOAD_BALANCING_MESSAGE = 4;
        CLOCK_SYNCHRONIZER_MESSAGE = 5;
    }

    required Type type = 1;

    // Note that these tags must match the enum above
    optional gm.GroupManagementMessage group_management_message = 2;
    optional sc.StateCollectionMessage state_collection_message = 3;
    optional lb.LoadBalancingMessage load_balancing_message = 4;
    optional ClockSynchronizerMessage clock_synchronizer_message = 5;

    required string recipient_module = 6;
}
