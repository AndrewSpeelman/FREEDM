//
// AUTOGENERATED SOURCE - DO NOT EDIT
//

#include "device/CPhysicalDeviceManager.hpp"
#include "device/PhysicalDeviceTypes.hpp"
#include "device/CDeviceFactory.hpp"

namespace freedm {
namespace broker {
namespace device {

// Registers the physical devices known to this file with the device factory
void RegisterPhysicalDevices()
{
    ##BREAK
}

// Implements one of the physical device manager functions
const std::vector<IDevice::Pointer> CPhysicalDeviceManager::GetDevicesByType(
        std::string type)
{
    std::vector<IDevice::Pointer> result;
    
    for( iterator it = m_devices.begin(); it != m_devices.end(); it++ )
    {
        ##BREAK
    }
    return result;
}

}
}
}
